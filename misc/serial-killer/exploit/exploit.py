import base64
from pwn import remote
from Crypto.Cipher import AES

r = remote('127.0.0.1', 1337)
# r.setLevel("debug")

r.sendline(b"ps aux | grep java | sed -r \"s/ +/ /g\" | grep ella | cut -d\" \" -f2")
pid = int(r.recvline(keepends=False))

r.sendline(b"mkdir -p tmp && kill %b && sleep 1 && cp *.dat tmp" % str(pid).encode())
r.recvline()

for file in (b"encryption_service.dat", b"flag.dat"):
    r.sendline(b"cat tmp/%b && echo" % file)
    content = r.recvline(keepends=False)
    with open(file, "wb") as f:
        f.write(content)

with open("flag.dat", "rb") as f:
    f.seek(7)
    flag = f.read()

print(f"Flag in base64: {flag}")
flag_bytes = base64.b64decode(flag)

with open("encryption_service.dat", "rb") as f:
    key = f.read()[-16:]

print(f"Key in hex (128 bits): {''.join([hex(b)[2:] for b in key])}")
    
iv = b"\x00" * 16 # taken from the serialized data

cipher = AES.new(key, AES.MODE_OFB, iv=iv)
deciphered_flag = cipher.decrypt(flag_bytes)

print(deciphered_flag)
